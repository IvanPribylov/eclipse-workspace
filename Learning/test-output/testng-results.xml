<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="15" ignored="0" total="52" passed="37">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="84" started-at="2019-12-23T15:58:55 MSK" finished-at="2019-12-23T15:58:55 MSK">
    <groups>
    </groups>
    <test name="testing" duration-ms="84" started-at="2019-12-23T15:58:55 MSK" finished-at="2019-12-23T15:58:55 MSK">
      <class name="Tests.TestFigures.CircleTest">
        <test-method status="FAIL" signature="checkCircumference(double, java.lang.Double)[pri:0, instance:Tests.TestFigures.CircleTest@7791a895, instance params:[]]" name="checkCircumference" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void Tests.TestFigures.CircleTest.checkCircumference(double,java.lang.Double)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkCircumference([Parameter{index=0, type=double, declaredAnnotations=[@org.testng.annotations.Optional(value=)]}, Parameter{index=1, type=java.lang.Double, declaredAnnotations=[]}])
Arguments: [(java.lang.Double) 2.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void Tests.TestFigures.CircleTest.checkCircumference(double,java.lang.Double)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: checkCircumference([Parameter{index=0, type=double, declaredAnnotations=[@org.testng.annotations.Optional(value=)]}, Parameter{index=1, type=java.lang.Double, declaredAnnotations=[]}])
Arguments: [(java.lang.Double) 2.0]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCircumference -->
        <test-method status="PASS" signature="checkSquare(double)[pri:1, instance:Tests.TestFigures.CircleTest@7791a895, instance params:[]]" name="checkSquare" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
        <test-method status="FAIL" signature="checkSquare(double)[pri:1, instance:Tests.TestFigures.CircleTest@7791a895, instance params:[]]" name="checkSquare" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [19.635] but found [19.636]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [19.635] but found [19.636]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at Tests.TestFigures.CircleTest.checkSquare(CircleTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
        <test-method status="FAIL" signature="checkSquare(double)[pri:1, instance:Tests.TestFigures.CircleTest@7791a895, instance params:[]]" name="checkSquare" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [3.14159265359E8] but found [3.1415926536E8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [3.14159265359E8] but found [3.1415926536E8]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at Tests.TestFigures.CircleTest.checkSquare(CircleTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
      </class> <!-- Tests.TestFigures.CircleTest -->
      <class name="Tests.TestFigures.QuadratTest">
        <test-method status="PASS" signature="checkSquare(double)[pri:0, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkSquare" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
        <test-method status="PASS" signature="checkSquare(double)[pri:0, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkSquare" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
        <test-method status="PASS" signature="checkSquare(double)[pri:0, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkSquare" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSquare -->
        <test-method status="PASS" signature="checkPerimetr(double)[pri:1, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double)[pri:1, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double)[pri:1, instance:Tests.TestFigures.QuadratTest@3a5ed7a6, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
      </class> <!-- Tests.TestFigures.QuadratTest -->
      <class name="Tests.TestFigures.Figures">
        <test-method status="PASS" signature="checkCircl(double)[pri:0, instance:Tests.TestFigures.Figures@7fac631b]" name="checkCircl" duration-ms="7" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCircl -->
        <test-method status="PASS" signature="checkCircl(double)[pri:0, instance:Tests.TestFigures.Figures@7fac631b]" name="checkCircl" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCircl -->
        <test-method status="PASS" signature="checkCircl(double)[pri:0, instance:Tests.TestFigures.Figures@7fac631b]" name="checkCircl" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCircl -->
        <test-method status="PASS" signature="checkQuadrat(double)[pri:1, instance:Tests.TestFigures.Figures@7fac631b]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="PASS" signature="checkQuadrat(double)[pri:1, instance:Tests.TestFigures.Figures@7fac631b]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="PASS" signature="checkQuadrat(double)[pri:1, instance:Tests.TestFigures.Figures@7fac631b]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="dp" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:2, instance:Tests.TestFigures.Figures@7fac631b]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
      </class> <!-- Tests.TestFigures.Figures -->
      <class name="Tests.TestFigures.RectangleTest">
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="3" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="FAIL" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [20000.0] but found [1.0E8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [20000.0] but found [1.0E8]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at Tests.TestFigures.RectangleTest.checkRectangle(RectangleTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="FAIL" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [5.0] but found [6.25]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [5.0] but found [6.25]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at Tests.TestFigures.RectangleTest.checkRectangle(RectangleTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="FAIL" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [25000.0] but found [1.0E8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [25000.0] but found [1.0E8]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at Tests.TestFigures.RectangleTest.checkRectangle(RectangleTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkRectangle(double, double)[pri:0, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkRectangle" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRectangle -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="PASS" signature="checkPerimetr(double, double)[pri:1, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkPerimetr" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPerimetr -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:729)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:729)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="0" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
The exception was thrown with the wrong message: expected "Is not Square" but got "The values aren't the same"
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:70)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.RuntimeException: The values aren't the same
at Tests.TestFigures.RectangleTest.checkQuadrat(RectangleTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
        <test-method status="FAIL" signature="checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]]" name="checkQuadrat" duration-ms="1" started-at="2019-12-23T15:58:55 MSK" data-provider="pr" finished-at="2019-12-23T15:58:55 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method RectangleTest.checkQuadrat(double, double)[pri:2, instance:Tests.TestFigures.RectangleTest@6325a3ee, instance params:[]] should have thrown an exception of type class java.lang.RuntimeException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:729)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuadrat -->
      </class> <!-- Tests.TestFigures.RectangleTest -->
    </test> <!-- testing -->
  </suite> <!-- Suite -->
</testng-results>
